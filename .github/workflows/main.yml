name: CI Pipeline

on:
  push:
    branches:
      - main

jobs:
  backend-setup:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Wait for PostgreSQL to be ready
        run: |
          for i in {1..30}; do
            if pg_isready -h localhost -p 5432; then
              echo "PostgreSQL is ready";
              break;
            fi;
            echo "Waiting for PostgreSQL...";
            sleep 2;
          done

      - name: Create database if it doesn't exist
        env:
          PGPASSWORD: ${{ secrets.DB_PASSWORD }}
        run: |
          psql -h localhost -U ${{ secrets.DB_USER }} -d postgres -c "SELECT 1 FROM pg_database WHERE datname='${{ secrets.DB_NAME }}'" || \
          psql -h localhost -U ${{ secrets.DB_USER }} -d postgres -c "CREATE DATABASE ${{ secrets.DB_NAME }}"

      - name: Create .env file
        run: |
          cd backend
          echo "DB_HOST=localhost" >> .env
          echo "DB_PORT=5432" >> .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env

      - name: Install backend dependencies
        run: cd backend && npm install

  backend-test:
    runs-on: ubuntu-latest
    needs: backend-setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run backend tests
        run: cd backend && npm test

  frontend:
    runs-on: ubuntu-latest
    needs: backend-setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install frontend dependencies
        run: cd frontend && npm install

      - name: Build frontend
        run: cd frontend && npm run build
